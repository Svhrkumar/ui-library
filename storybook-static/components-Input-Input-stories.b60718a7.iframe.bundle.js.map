{"version":3,"file":"components-Input-Input-stories.b60718a7.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;AAwBA;AACA;;;;AAOA;AAGA;AACA;AA8BA","sources":["webpack://@raghavsvh/pixelflex/./src/components/Input/Input.tsx"],"sourcesContent":["import classNames from 'classnames';\r\nimport React, { useId, Fragment } from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst commonStyle = css`\r\n\tpadding: 5px 10px !important;\r\n\twidth: 80% !important;\r\n\tborder-radius: 9px;\r\n\tborder: 1px solid gray;\r\n\tmargin: 5px;\r\n\t&:focus {\r\n\t\tborder: 1px solid blue !important;\r\n\t}\r\n\t&.sm {\r\n\t\twidth: 20% !important;\r\n\t}\r\n\t&.md {\r\n\t\twidth: 35% !important;\r\n\t}\r\n\t&.lg {\r\n\t\twidth: 90% !important;\r\n\t}\r\n`;\r\n\r\nconst InputTheme = styled.input<{ type: string }>`\r\n\t${(props) =>\r\n\t\tprops.type === 'checkbox' || props.type === 'radio'\r\n\t\t\t? css`\r\n\t\t\t\t\twidth: auto !important;\r\n\t\t\t\t\tpadding: 0 !important;\r\n\t\t\t\t\tmargin: 5px 5px;\r\n\t\t\t  `\r\n\t\t\t: commonStyle}\r\n`;\r\n\r\nconst SelectTheme = styled.select`\r\n\t${commonStyle}\r\n`;\r\n\r\nexport interface InputProps {\r\n\ttype:\r\n\t\t| 'text'\r\n\t\t| 'checkbox'\r\n\t\t| 'radio'\r\n\t\t| 'password'\r\n\t\t| 'number'\r\n\t\t| 'date'\r\n\t\t| 'email'\r\n\t\t| 'textarea'\r\n\t\t| 'select';\r\n\r\n\tonChange: (\r\n\t\tevent: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>\r\n\t) => void;\r\n\tplaceholder?: string;\r\n\tclassName?: string;\r\n\tvalue?: string;\r\n\tchecked?: boolean;\r\n\tsize?: 'sm' | 'md' | 'lg';\r\n\tdisabled?: boolean;\r\n\toptions?: {\r\n\t\tlabel: string;\r\n\t\tvalue: string;\r\n\t}[];\r\n}\r\n\r\nconst FormControl: React.FC<InputProps> = ({\r\n\ttype,\r\n\tonChange,\r\n\tplaceholder,\r\n\tclassName,\r\n\tvalue,\r\n\tchecked,\r\n\tsize,\r\n\tdisabled,\r\n\toptions,\r\n}) => {\r\n\tconst id = useId();\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{type !== 'select' ? (\r\n\t\t\t\t<InputTheme\r\n\t\t\t\t\ttype={type}\r\n\t\t\t\t\tonChange={(e) => onChange(e as React.ChangeEvent<HTMLInputElement>)}\r\n\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\tclassName={classNames(className, size)}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tchecked={checked}\r\n\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<SelectTheme\r\n\t\t\t\t\tonChange={(e) => onChange(e as React.ChangeEvent<HTMLSelectElement>)}\r\n\t\t\t\t\tclassName={classNames(className, size)}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tdisabled={disabled}>\r\n\t\t\t\t\t<option value=''>Select an option</option>\r\n\t\t\t\t\t{options?.map(({ label, value }, index) => (\r\n\t\t\t\t\t\t<option key={`${id}-${index}`} value={value}>\r\n\t\t\t\t\t\t\t{label}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</SelectTheme>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default FormControl;\r\n"],"names":[],"sourceRoot":""}