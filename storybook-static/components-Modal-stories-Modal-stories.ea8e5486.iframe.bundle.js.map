{"version":3,"file":"components-Modal-stories-Modal-stories.ea8e5486.iframe.bundle.js","mappings":";;;;;;;;;;AAkBA;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;;;;;AAOA;;;;;;;AASA;;;;;;;AAkBA","sources":["webpack://@raghavsvh/pixelflex/./src/components/Modal/Modal.tsx"],"sourcesContent":["import classNames from 'classnames';\r\nimport { FC, ReactNode } from 'react';\r\nimport { ModalContext, useModalContext } from './useModalContext'; // Ensure this context is correctly set up\r\nimport styled from 'styled-components';\r\nimport { MdClose } from 'react-icons/md';\r\n\r\nconst ModalContainer = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\tbackground-color: rgba(0, 0, 0, 0.5);\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n`;\r\n\r\nconst ModalDisplay = styled.div`\r\n\tbackground-color: white;\r\n\tborder-radius: 9px;\r\n\tpadding: 0.5rem;\r\n\tmax-width: 500px;\r\n\twidth: 100%;\r\n\tbox-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n\tanimation: slide-down 0.3s ease-out;\r\n\t&.sm {\r\n\t\tmax-width: 400px;\r\n\t}\r\n\t&.md {\r\n\t\tmax-width: 600px;\r\n\t}\r\n\t&.lg {\r\n\t\tmax-width: 1000px;\r\n\t}\r\n\t&.light {\r\n\t\tbackground-color: #e8ebe9;\r\n\t\tcolor: #4b4d4b;\r\n\t}\r\n\t&.dark {\r\n\t\tbackground-color: #4b4d4b;\r\n\t\tcolor: #e8ebe9;\r\n\t}\r\n`;\r\n\r\nconst ModalContentTheme = styled.div`\r\n\tpadding: 0.5rem;\r\n\twidth: 100%;\r\n\tmax-height: 500px;\r\n\toverflow-y: scroll;\r\n`;\r\n\r\nconst ModalHeaderTheme = styled.div`\r\n\tpadding: 0.5rem;\r\n\tborder-bottom: 1px solid #d1d1d1;\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n`;\r\n\r\nconst ModalFooterTheme = styled.div`\r\n\tpadding: 0.5rem;\r\n\tborder-top: 1px solid #d1d1d1;\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n`;\r\n\r\nexport interface ModalProps {\r\n\tclassName?: string;\r\n\tchildren: ReactNode;\r\n\tisOpen?: boolean;\r\n\tonClose?: () => void;\r\n\tsize?: 'sm' | 'md' | 'lg';\r\n\ttheme?: 'dark' | 'light';\r\n}\r\n\r\nconst ModalComponent: FC<ModalProps> = ({\r\n\tchildren,\r\n\tclassName,\r\n\tisOpen,\r\n\tonClose,\r\n\tsize,\r\n\ttheme,\r\n}) => {\r\n\tconst contextValue = { onClose };\r\n\r\n\tif (!isOpen) return null;\r\n\r\n\treturn (\r\n\t\t<ModalContext.Provider value={contextValue}>\r\n\t\t\t<ModalContainer className={classNames(className)}>\r\n\t\t\t\t<ModalDisplay className={classNames(className, size, theme)}>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</ModalDisplay>\r\n\t\t\t</ModalContainer>\r\n\t\t</ModalContext.Provider>\r\n\t);\r\n};\r\n\r\nconst ModalContent: FC<ModalProps> = ({ className, children }) => {\r\n\treturn (\r\n\t\t<ModalContentTheme className={classNames(className)}>\r\n\t\t\t{children}\r\n\t\t</ModalContentTheme>\r\n\t);\r\n};\r\n\r\nconst ModalHeader: FC<ModalProps> = ({ className, children }) => {\r\n\tconst { onClose } = useModalContext();\r\n\treturn (\r\n\t\t<ModalHeaderTheme className={classNames(className)}>\r\n\t\t\t{children}\r\n\t\t\t<MdClose\r\n\t\t\t\tstyle={{ cursor: 'pointer', padding: '2px 6px' }}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\t// Access onClose from context\r\n\r\n\t\t\t\t\tif (onClose) onClose();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</ModalHeaderTheme>\r\n\t);\r\n};\r\n\r\nconst ModalFooter: FC<ModalProps> = ({ className, children }) => {\r\n\treturn (\r\n\t\t<ModalFooterTheme className={classNames(className)}>\r\n\t\t\t{children}\r\n\t\t</ModalFooterTheme>\r\n\t);\r\n};\r\n\r\nconst Modal = Object.assign(ModalComponent, {\r\n\tContent: ModalContent,\r\n\tHeader: ModalHeader,\r\n\tFooter: ModalFooter,\r\n});\r\n\r\nexport default Modal;\r\n"],"names":[],"sourceRoot":""}